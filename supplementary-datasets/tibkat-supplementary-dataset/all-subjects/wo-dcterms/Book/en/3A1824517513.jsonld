{
    "@graph": [
        {
            "@id": "https://www.tib.eu/de/suchen/id/TIBKAT%3A1824517513",
            "@type": "bibo:Book",
            "P1053": "1 Online-Ressource(XXIV, 313 p. 44 illus.)",
            "creator": "Sarcar, Vaskaran",
            "description": "Campusweiter Zugriff (Universit\u00e4t Hannover) - Vervielf\u00e4ltigungen (z.B. Kopien, Downloads) sind nur von einzelnen Kapiteln oder Seiten und nur zum eigenen wissenschaftlichen Gebrauch erlaubt. Keine Weitergabe an Dritte. Kein systematisches Downloaden durch Robots.",
            "identifier": [
                "(doi)10.1007/978-1-4842-8737-8",
                "(ppn)1824517513",
                "(isbn13)9781484287378",
                "(firstid)KEP:083105735"
            ],
            "publisher": "Apress",
            "subject": [
                "Microsoft software.",
                "(classificationName=linseach:mapping)inf",
                "(classificationName=ddc)005.268",
                "Microsoft .NET Framework."
            ],
            "title": "Simple and Efficient Programming with C# : Skills to Build Applications with Visual Studio and .NET",
            "abstract": [
                "Apply skills and approaches to your programming to build a real-world application in C# 11 using the latest editions of Visual Studio, C#, and Microsoft .NET. This revised edition is updated with C#11 and places more emphasis on the newly introduced top-level statements. Additionally, you will find useful techniques and an explanation of the differences between writing code in two different styles. It also covers the new templates introduced in .NET 6, along with usage of .NET 7 in Windows 10 to write code and generate output. Each chapter opens with an introduction and original application written in C# 11 so that you can jump right into coding. From there, you are guided through an expected output and taught best practices along the way. Author Vaskaran Sarcar emphasizes extending and maintaining the same program and he demonstrates examples for different scenarios to make your program more efficient and effective. This book is divided into five parts. The first part starts with a detailed discussion of polymorphism. It then shows you how to make proper use of abstract classes and interfaces, and teaches you to discern which technique to use for a specific scenario. Discussions on code comments teach you how to use them effectively, and why you need to be careful with code comments. In the second part you will learn six design principles, including SOLID and DRY principles. These are the foundation of well-known design patterns, and they establish practices for developing software with considerations for maintaining and extending as a project grows. The third part walks you through methods to make efficient applications. You will learn the common use of factories to separate code from its opposite and the alternative of inheritance using object composition and wrappers. This part also demonstrates the use of template methods, hooks, and facades in programming. Hints show you how professional coders develop an enterprise application. Better handling of exceptions and null values is another integral part of professional programming, which the fourth part explores in detail. This will help you become a more professional programmer. In the final part of the book, you will learn about effective memory management techniques and the use and misuse of design patterns. This part also briefly discusses how to decide between a static method and an instance method and other techniques. After reading this book, you will be able to implement best practices to make your programs more effective and reliable. You will: Analyze alternative solutions before implementation by comparing pros and cons Make polymorphic code perform better Know the side effects of bad/redundant comments Understand the significance of the SOLID and DRY principles Add features using wrappers Redefine steps without altering the calling sequence of an algorithm Use hooks in your application Convert a complex system into a user-friendly system using facades Run your application in .NET 6.",
                "Part I: Fundamentals -- Chapter 1: Flexible Code Using Polymorphism -- Chapter 2: Abstract Class or Interface? -- Chapter 3: Wise Use of Code Comments -- Part II: Important Principles -- Chapter 4: Know SOLID Principles -- Chapter 5: Use the DRY Principle -- Part III: Make Efficient Applications -- Chapter 6: Separate Changeable Code Using Factories -- Chapter 7: Add Features Using Wrappers -- Chapter 8: Efficient Templates Using Hooks -- Chapter 9: Simplify Complex Systems Using Facades -- Part IV: Handling Surprises in a Better Way -- Chapter 10: Organizing Exceptions -- Chapter 11: Special Attention to Null Values -- Part V: The Road Ahead -- Chapter 12: Memory Management -- Chapter 13: Analyzing Memory Leaks -- Chapter 14: More Tips -- Appendix A: Winning Notes -- Appendix B: Resources."
            ],
            "contributor": "Technische Informationsbibliothek (TIB)",
            "isPartOf": [
                "(collectioncode)ZDB-2-SXPC",
                "(collectioncode)ZDB-2-SEB",
                "(collectioncode)ZDB-2-CWD"
            ],
            "issued": "2023",
            "language": "http://id.loc.gov/vocabulary/iso639-1/en",
            "license": "commercial licence",
            "medium": "rda:termList/RDACarrierType/1018",
            "isLike": "doi:10.1007/978-1-4842-8737-8",
            "P60163": "Berkeley, CA"
        }
    ],
    "@id": "urn:x-arq:DefaultGraphNode",
    "@context": {
        "creator": "http://purl.org/dc/elements/1.1/creator",
        "subject": "http://purl.org/dc/elements/1.1/subject",
        "identifier": "http://purl.org/dc/elements/1.1/identifier",
        "isLike": {
            "@id": "http://umbel.org/umbel#isLike",
            "@type": "@id"
        },
        "description": "http://purl.org/dc/elements/1.1/description",
        "title": "http://purl.org/dc/elements/1.1/title",
        "language": {
            "@id": "http://purl.org/dc/terms/language",
            "@type": "@id"
        },
        "medium": {
            "@id": "http://purl.org/dc/terms/medium",
            "@type": "@id"
        },
        "isPartOf": "http://purl.org/dc/terms/isPartOf",
        "publisher": "http://purl.org/dc/elements/1.1/publisher",
        "P60163": "http://www.rdaregistry.info/Elements/u/#P60163",
        "abstract": "http://purl.org/dc/terms/abstract",
        "license": "http://purl.org/dc/terms/license",
        "issued": "http://purl.org/dc/terms/issued",
        "P1053": "http://iflastandards.info/ns/isbd/elements/P1053",
        "contributor": "http://purl.org/dc/terms/contributor",
        "umbel": "http://umbel.org/umbel#",
        "rdau": "http://www.rdaregistry.info/Elements/u/#",
        "owl": "http://www.w3.org/2002/07/owl#",
        "dcterms": "http://purl.org/dc/terms/",
        "bibo": "http://purl.org/ontology/bibo/",
        "rdam": "http://www.rdaregistry.info/Elements/m/#",
        "gnd": "http://d-nb.info/gnd/",
        "isbd": "http://iflastandards.info/ns/isbd/elements/",
        "rda": "http://rdvocab.info/",
        "doi": "https://doi.org/"
    }
}