{
    "@graph": [
        {
            "@id": "https://www.tib.eu/de/suchen/id/TIBKAT%3A1823166385",
            "@type": "bibo:Book",
            "P1053": "1 Online-Ressource(XVIII, 202 p. 29 illus.)",
            "creator": "Kautsch, Andr\u00e9s Iba\u00f1ez",
            "description": "Campusweiter Zugriff (Universit\u00e4t Hannover) - Vervielf\u00e4ltigungen (z.B. Kopien, Downloads) sind nur von einzelnen Kapiteln oder Seiten und nur zum eigenen wissenschaftlichen Gebrauch erlaubt. Keine Weitergabe an Dritte. Kein systematisches Downloaden durch Robots.",
            "identifier": [
                "(firstid)KEP:082741972",
                "(isbn13)9781484286951",
                "(ppn)1823166385",
                "(doi)10.1007/978-1-4842-8695-1"
            ],
            "publisher": "Apress",
            "subject": [
                "(classificationName=ddc)005.268",
                "(classificationName=linseach:mapping)inf",
                "Apple computer."
            ],
            "title": "Modern Concurrency on Apple Platforms : Using async/await with Swift",
            "abstract": [
                "Chapter 1: Introduction to Concurrency -- Chapter 2: Async/Await Basics -- Chapter 3: Introducing Structured Concurrency -- Chapter 4: The Task Tree -- Chapter 5: Task Groups -- Chapter 6: Unstructured Concurrency -- Chapter 7: Actors and Global Actors -- Chapter 8: Final Bits -- Chapter 9: AsyncSequence -- Chapter 10: @TaskLocal.",
                "Build solid software with modern and safe concurrency features. Concurrency is one of the hardest problems in computer science. For years, computer scientists and engineers have developed different strategies for dealing with concurrency. However, the original concurrency primitives are complicated and difficult to understand, and even harder to implement. Using the new async/await APIs in Swift, this book will explain how your code can abstract a lot of the complexity with a simpler interface so you never have to deal with concurrency primitives such as semaphores, locks, and threads yourself. This will allow you to write concurrent code that is easier to read, easier to write, and easier to maintain. These new APIs are deeply ingrained into Swift, offering compile-level features that will keep you from writing dangerous concurrent code. You\u2019ll start by exploring why concurrency is hard to implement in a traditional system. Explaining the definition of concurrency and what its primitives are will help you understand why they are hard to use correctly. These concepts will become clearer as you work through the sample projects. The book\u2019s focus then shifts exclusively to the new APIs, helping you understand how the integration of the system with the language itself makes it easier for you to write concurrent code without overstepping the bounds of the concurrency safe zone. By the end of the book, you\u2019ll have a solid foundation for working safely with concurrent code using the new async/await APIs."
            ],
            "contributor": "Technische Informationsbibliothek (TIB)",
            "isPartOf": [
                "(collectioncode)ZDB-2-CWD",
                "(collectioncode)ZDB-2-SEB",
                "(collectioncode)ZDB-2-SXPC"
            ],
            "issued": "2023",
            "language": "http://id.loc.gov/vocabulary/iso639-1/en",
            "license": "commercial licence",
            "medium": "rda:termList/RDACarrierType/1018",
            "isLike": "doi:10.1007/978-1-4842-8695-1",
            "P60163": "Berkeley, CA"
        }
    ],
    "@id": "urn:x-arq:DefaultGraphNode",
    "@context": {
        "P1053": "http://iflastandards.info/ns/isbd/elements/P1053",
        "identifier": "http://purl.org/dc/elements/1.1/identifier",
        "isPartOf": "http://purl.org/dc/terms/isPartOf",
        "abstract": "http://purl.org/dc/terms/abstract",
        "license": "http://purl.org/dc/terms/license",
        "publisher": "http://purl.org/dc/elements/1.1/publisher",
        "medium": {
            "@id": "http://purl.org/dc/terms/medium",
            "@type": "@id"
        },
        "P60163": "http://www.rdaregistry.info/Elements/u/#P60163",
        "isLike": {
            "@id": "http://umbel.org/umbel#isLike",
            "@type": "@id"
        },
        "language": {
            "@id": "http://purl.org/dc/terms/language",
            "@type": "@id"
        },
        "title": "http://purl.org/dc/elements/1.1/title",
        "issued": "http://purl.org/dc/terms/issued",
        "contributor": "http://purl.org/dc/terms/contributor",
        "subject": "http://purl.org/dc/elements/1.1/subject",
        "description": "http://purl.org/dc/elements/1.1/description",
        "creator": "http://purl.org/dc/elements/1.1/creator",
        "umbel": "http://umbel.org/umbel#",
        "rdau": "http://www.rdaregistry.info/Elements/u/#",
        "owl": "http://www.w3.org/2002/07/owl#",
        "dcterms": "http://purl.org/dc/terms/",
        "bibo": "http://purl.org/ontology/bibo/",
        "rdam": "http://www.rdaregistry.info/Elements/m/#",
        "gnd": "http://d-nb.info/gnd/",
        "isbd": "http://iflastandards.info/ns/isbd/elements/",
        "rda": "http://rdvocab.info/",
        "doi": "https://doi.org/"
    }
}