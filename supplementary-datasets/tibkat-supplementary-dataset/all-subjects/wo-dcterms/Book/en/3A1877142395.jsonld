{
    "@graph": [
        {
            "@id": "https://www.tib.eu/de/suchen/id/TIBKAT%3A1877142395",
            "@type": "bibo:Book",
            "P1053": "1 Online-Ressource(XVIII, 266 p. 53 illus.)",
            "creator": [
                "Forg\u00e1cs, Istv\u00e1n",
                "Kov\u00e1cs, Attila"
            ],
            "description": "Campusweiter Zugriff (Universit\u00e4t Hannover) - Vervielf\u00e4ltigungen (z.B. Kopien, Downloads) sind nur von einzelnen Kapiteln oder Seiten und nur zum eigenen wissenschaftlichen Gebrauch erlaubt. Keine Weitergabe an Dritte. Kein systematisches Downloaden durch Robots.",
            "identifier": [
                "(isbn13)9781484298930",
                "(firstid)KEP:09977335X",
                "(ppn)1877142395",
                "(doi)10.1007/978-1-4842-9893-0"
            ],
            "publisher": "Apress",
            "subject": [
                "(classificationName=ddc)005.14",
                "(classificationName=linseach:mapping)inf",
                "Computer programs",
                "Software engineering"
            ],
            "title": "Modern Software Testing Techniques : A Practical Guide for Developers and Testers",
            "abstract": "Many books have been written about software testing, but most of them discuss the general framework of testing from a traditional perspective. Unfortunately, traditional test design techniques are often ineffective and unreliable for revealing the various kinds of faults that may occur. This book introduces three new software testing techniques: Two-Phase Model-Based Testing, the Action-State Testing, and the General Predicate Testing, all of which work best when applied with efficient fault revealing capabilities. You\u2019ll start with a short recap of software testing, focusing on why risk analysis is obligatory, how to classify bugs practically, and how fault-based testing can be used for improving test design. You\u2019ll then see how action-state testing merges the benefits of state transition testing and use case testing into a unified approach. Moving on you\u2019ll look at general predicate testing and how it serves as an extension of boundary value analysis, encompassing more complex predicates. Two-phase model-based testing represents an advanced approach where the model does not necessarily need to be machine-readable; human readability suffices. The first phase involves a high-level model from which abstract tests are generated. Upon manual execution of these tests, the test code is generated. Rather than calculating output values, they are merely checked for conformity. The last part of this book contains a chapter on how developers and testers can help each other and work as a collaborative team. You will: Apply efficient test design techniques for detecting domain faults Work with modeling techniques that combine all the advantages of state transition testing and use case testing Grasp the two-phase model-based testing technique Use test design efficiently to find almost all the bugs in an application.",
            "contributor": "Technische Informationsbibliothek (TIB)",
            "isPartOf": [
                "(collectioncode)ZDB-2-SEB",
                "(collectioncode)ZDB-2-CWD",
                "(collectioncode)ZDB-2-SXPC"
            ],
            "issued": "2024",
            "language": "http://id.loc.gov/vocabulary/iso639-1/en",
            "license": "commercial licence",
            "medium": "rda:termList/RDACarrierType/1018",
            "isLike": "doi:10.1007/978-1-4842-9893-0",
            "P60163": "Berkeley, CA"
        }
    ],
    "@id": "urn:x-arq:DefaultGraphNode",
    "@context": {
        "contributor": "http://purl.org/dc/terms/contributor",
        "title": "http://purl.org/dc/elements/1.1/title",
        "language": {
            "@id": "http://purl.org/dc/terms/language",
            "@type": "@id"
        },
        "description": "http://purl.org/dc/elements/1.1/description",
        "subject": "http://purl.org/dc/elements/1.1/subject",
        "identifier": "http://purl.org/dc/elements/1.1/identifier",
        "medium": {
            "@id": "http://purl.org/dc/terms/medium",
            "@type": "@id"
        },
        "isPartOf": "http://purl.org/dc/terms/isPartOf",
        "P1053": "http://iflastandards.info/ns/isbd/elements/P1053",
        "publisher": "http://purl.org/dc/elements/1.1/publisher",
        "creator": "http://purl.org/dc/elements/1.1/creator",
        "isLike": {
            "@id": "http://umbel.org/umbel#isLike",
            "@type": "@id"
        },
        "license": "http://purl.org/dc/terms/license",
        "P60163": "http://www.rdaregistry.info/Elements/u/#P60163",
        "abstract": "http://purl.org/dc/terms/abstract",
        "issued": "http://purl.org/dc/terms/issued",
        "umbel": "http://umbel.org/umbel#",
        "rdau": "http://www.rdaregistry.info/Elements/u/#",
        "owl": "http://www.w3.org/2002/07/owl#",
        "dcterms": "http://purl.org/dc/terms/",
        "bibo": "http://purl.org/ontology/bibo/",
        "rdam": "http://www.rdaregistry.info/Elements/m/#",
        "gnd": "http://d-nb.info/gnd/",
        "isbd": "http://iflastandards.info/ns/isbd/elements/",
        "rda": "http://rdvocab.info/",
        "doi": "https://doi.org/"
    }
}