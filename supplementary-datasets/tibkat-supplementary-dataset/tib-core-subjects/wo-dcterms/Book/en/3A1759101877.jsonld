{
    "@graph": [
        {
            "@id": "https://www.tib.eu/de/suchen/id/TIBKAT%3A1759101877",
            "@type": "bibo:Book",
            "P1053": "1 Online-Ressource (1 electronic text (xiii, 197 p.))",
            "contributor": [
                "Wood, David A.",
                "Hill, Mark Donald"
            ],
            "creator": "Sorin, Daniel J.",
            "description": [
                "ill., digital file",
                "Campusweiter Zugriff (Universit\u00e4t Hannover) - Vervielf\u00e4ltigungen (z.B. Kopien, Downloads) sind nur von einzelnen Kapiteln oder Seiten und nur zum eigenen wissenschaftlichen Gebrauch erlaubt. Keine Weitergabe an Dritte. Kein systematisches Downloaden durch Robots."
            ],
            "identifier": [
                "(ppn)1759101877",
                "(isbn13)9781608455652",
                "(firstid)KEP:063070219"
            ],
            "publisher": "Morgan & Claypool",
            "subject": [
                "Distributed shared memory",
                "(classificationName=linseach:mapping)inf",
                "Cache memory",
                "(classificationName=loc)QA76.9.M45",
                "(classificationName=linseach:mapping)mat",
                "(classificationName=ddc)005.43",
                "Memory management (Computer science)"
            ],
            "title": "A primer on memory consistency and cache coherence",
            "abstract": [
                "4. Total store order and the x86 memory model -- Motivation for TSO/x86 -- Basic idea of TSO/x86 -- A little TSO formalism and an x86 conjecture -- Implementing TSO/x86 -- Atomic instructions and fences with TSO -- Atomic instructions -- Fences -- Further reading regarding TSO -- Comparing SC and TSO -- References --",
                "Preface -- 1. Introduction to consistency and coherence -- Consistency (a.k.a., memory consistency, memory consistency model or memory model) -- Coherence (a.k.a., cache coherence) -- A consistency and coherence quiz -- What this primer does not do --",
                "5. Relaxed memory consistency -- Motivation -- Opportunities to reorder memory operations -- Opportunities to exploit reordering -- An example relaxed consistency model (XC) -- The basic idea of the XC model -- Examples using fences under XC -- Formalizing XC -- Examples showing XC operating correctly -- Implementing XC -- Atomic instructions with XC -- Fences with XC -- A caveat -- Sequential consistency for data-race-free programs -- Some relaxed model concepts -- Release consistency -- Causality and write atomicity -- A relaxed memory model case study: IBM power -- Further reading and commercial relaxed memory models -- Academic literature -- Commercial models -- Comparing memory models -- How do relaxed memory models relate to each other and TSO and SC -- How good are relaxed models -- High-level language models -- References --",
                "7. Snooping coherence protocols -- Introduction to snooping -- Baseline snooping protocol -- High-level protocol specification -- Simple snooping system model: atomic requests -- Atomic transactions -- Baseline snooping system model: non-atomic requests, atomic transactions -- Running example -- Protocol simplifications -- Adding the exclusive state -- Motivation -- Getting to the exclusive state -- High-level specification of protocol -- Detailed specification -- Running example -- Adding the owned state -- Motivation -- High-level protocol specification -- Detailed protocol specification -- Running example -- Non-atomic bus -- Motivation -- In-order vs. out-of-order responses -- Non-atomic system model -- An MSI protocol with a split-transaction bus -- An optimized, non-stalling MSI protocol with a split-transaction bus -- Optimizations to the bus interconnection network -- Separate non-bus network for data responses -- Logical bus for coherence requests -- Case studies -- Sun Starfire E10000 -- IBM Power5 -- Discussion and the future of snooping -- References --",
                "2. Coherence basics -- Baseline system model -- The problem: how incoherence could possibly occur -- Defining coherence -- Maintaining the coherence invariants -- The granularity of coherence -- The scope of coherence -- References --",
                "Many modern computer systems and most multicore chips (chip multiprocessors) support shared memory in hardware. In a shared memory system, each of the processor cores may read and write to a single shared address space. For a shared memory machine, the memory consistency model defines the architecturally visible behavior of its memory system. Consistency definitions provide rules about loads and stores (or memory reads and writes) and how they act upon memory. As part of supporting a memory consistency model, many machines also provide cache coherence protocols that ensure that multiple cached copies of data are kept up-to-date. The goal of this primer is to provide readers with a basic understanding of consistency and coherence. This understanding includes both the issues that must be solved as well as a variety of solutions. We present both high level concepts as well as specific, concrete examples from real-world systems",
                "9. Advanced topics in coherence -- System models -- Instruction caches -- Translation lookaside buffers (TLBS) -- Virtual caches -- Write-through caches -- Coherent direct memory access (DMA) -- Multi-level caches and hierarchical coherence protocols -- Performance optimizations -- Migratory sharing optimization -- False sharing optimizations -- Maintaining liveness -- Deadlock -- Livelock -- Starvation -- Token coherence -- The future of coherence -- References -- Author biographies.",
                "6. Coherence protocols -- The big picture -- Specifying coherence protocols -- Example of a simple coherence protocol -- Overview of coherence protocol design space -- States -- Transactions -- Major protocol design options -- References --",
                "8. Directory coherence protocols -- Introduction to directory protocols -- Baseline directory system -- Directory system model -- High-level protocol specification -- Avoiding deadlock -- Detailed protocol specification -- Protocol operation -- Protocol simplifications -- Adding the exclusive state -- High-level protocol specification -- Detailed protocol specification -- Adding the owned state -- High-level protocol specification -- Detailed protocol specification -- Representing directory state -- Coarse directory -- Limited pointer directory -- Directory organization -- Directory cache backed by DRAM -- Inclusive directory caches -- Null directory cache (with no backing store) -- Performance and scalability optimizations -- Distributed directories -- Non-stalling directory protocols -- Interconnection networks without point-to-point ordering -- Silent vs. non-silent evictions of blocks in state S -- Case studies -- SGI origin 2000 -- Coherent hypertransport -- Hypertransport assist -- Intel QPI -- Discussion and the future of directory protocols -- References --",
                "3. Memory consistency motivation and sequential consistency -- Problems with shared memory behavior -- What is a memory consistency model -- Consistency vs. coherence -- Basic idea of sequential consistency (SC) -- A little SC formalism -- Naive SC implementations -- A basic SC implementation with cache coherence -- Optimized SC implementations with cache coherence -- Atomic operations with SC -- Putting it all together: MIPS R10000 -- Further reading regarding SC -- References --"
            ],
            "dcterms:contributor": "Technische Informationsbibliothek (TIB)",
            "isPartOf": [
                "(collectioncode)ZDB-105-MCIA",
                "(collectioncode)ZDB-105-MCS"
            ],
            "issued": "2011",
            "language": "http://id.loc.gov/vocabulary/iso639-1/en",
            "license": "commercial licence",
            "medium": "rda:termList/RDACarrierType/1018",
            "volume": "# 16",
            "P30128": "Synthesis lectures on computer architecture",
            "P60163": "San Rafael, Calif. (1537 Fourth Street, San Rafael, CA  94901 USA)"
        }
    ],
    "@id": "urn:x-arq:DefaultGraphNode",
    "@context": {
        "creator": "http://purl.org/dc/elements/1.1/creator",
        "isPartOf": "http://purl.org/dc/terms/isPartOf",
        "abstract": "http://purl.org/dc/terms/abstract",
        "subject": "http://purl.org/dc/elements/1.1/subject",
        "volume": "http://purl.org/ontology/bibo/volume",
        "medium": {
            "@id": "http://purl.org/dc/terms/medium",
            "@type": "@id"
        },
        "identifier": "http://purl.org/dc/elements/1.1/identifier",
        "P1053": "http://iflastandards.info/ns/isbd/elements/P1053",
        "contributor": "http://purl.org/dc/elements/1.1/contributor",
        "title": "http://purl.org/dc/elements/1.1/title",
        "issued": "http://purl.org/dc/terms/issued",
        "description": "http://purl.org/dc/elements/1.1/description",
        "P30128": "http://www.rdaregistry.info/Elements/m/#P30128",
        "license": "http://purl.org/dc/terms/license",
        "language": {
            "@id": "http://purl.org/dc/terms/language",
            "@type": "@id"
        },
        "publisher": "http://purl.org/dc/elements/1.1/publisher",
        "P60163": "http://www.rdaregistry.info/Elements/u/#P60163",
        "umbel": "http://umbel.org/umbel#",
        "rdau": "http://www.rdaregistry.info/Elements/u/#",
        "owl": "http://www.w3.org/2002/07/owl#",
        "dcterms": "http://purl.org/dc/terms/",
        "bibo": "http://purl.org/ontology/bibo/",
        "rdam": "http://www.rdaregistry.info/Elements/m/#",
        "gnd": "http://d-nb.info/gnd/",
        "isbd": "http://iflastandards.info/ns/isbd/elements/",
        "rda": "http://rdvocab.info/",
        "doi": "https://doi.org/"
    }
}