{
    "@graph": [
        {
            "@id": "https://www.tib.eu/de/suchen/id/TIBKAT%3A1831230348",
            "@type": "bibo:Book",
            "P1053": "1 Online-Ressource(XXVII, 434 p. 76 illus.)",
            "creator": "Friese, Peter",
            "description": "Campusweiter Zugriff (Universit\u00e4t Hannover) - Vervielf\u00e4ltigungen (z.B. Kopien, Downloads) sind nur von einzelnen Kapiteln oder Seiten und nur zum eigenen wissenschaftlichen Gebrauch erlaubt. Keine Weitergabe an Dritte. Kein systematisches Downloaden durch Robots.",
            "identifier": [
                "(isbn13)9781484285725",
                "(ppn)1831230348",
                "(doi)10.1007/978-1-4842-8572-5",
                "(firstid)KEP:083740392"
            ],
            "publisher": "Apress",
            "subject": [
                "(classificationName=ddc)005.268",
                "Apple computer.",
                "(classificationName=linseach:mapping)inf"
            ],
            "title": "Asynchronous Programming with SwiftUI and Combine : Functional Programming to Build UIs on Apple Platforms",
            "abstract": [
                "Chapter 1: SwiftUI - A new Beginning -- Chapter 2: Getting Started with SwiftUI -- Chapter 3: SwiftUI Building Blocks -- Chapter 4: State Management -- Chapter 5: Displaying Data in Lists -- Chapter 6: Building Input Forms -- Chapter 7: Getting Started with Combine -- Chapter 8: Driving UI State with Combine- Chapter 9: Networking with Combine -- Chapter 10: Error Handling in Combine -- Chapter 11: Implementing Custom Combine Operators -- Chapter 12: Wrapping existing APIs in Combine (Firebase) -- Chapter 13: Combine Schedulers and SwiftUI -- Chapter 14: Getting Started with async-await -- Chapter 15: Using async-await in SwiftUI -- Chapter 16: Bringing it all together - SwiftUI, async-await, and Combine.",
                "Develop UI-heavy applications more easily, faster, and error-free. Based on several enhancements to the Swift language, SwiftUI takes a declarative approach to building UIs. Instead of imperatively coding the UI, this book will show you how to describe how you want your UI to look. SwiftUI treats the UI as a function of its state, thereby making managing your app\u2019s state a lot easier. Change the underlying data model to redraw all parts of the UI that are connected to that particular slice of data. Likewise, easily update the underlying data model from the UI elements your data model is connected to. Combine is Apple\u2019s Functional Reactive Programming framework. It complements SwiftUI and other frameworks, such as the networking APIs, in a natural way. Using Combine, you can subscribe to events and describe data processing in a way that is free of side effects. This allows for an easier implementation of event-driven applications. Using SwiftUI and Combine build more error-free apps in a shorter amount of time, targeting all of Apple\u2019s platforms (iOS, iPadOS, watchOS, macOS, tvOS) with little to no overhead. By the end of the book you will have a solid understanding for architecting and implementing UI-heavy apps in a declarative and functional reactive way using SwiftUI, Combine, and async/await. You will: - Build simple and gradually more complex UIs in SwiftUI - Understand SwiftUI\u2019s state management system - Work with Combine and Swift\u2019s new async/await APIs to access the network and access other asynchronous APIs - Architect and structure modern applications on Apple platforms using SwiftUI, Combine, and async/await."
            ],
            "contributor": "Technische Informationsbibliothek (TIB)",
            "isPartOf": [
                "(collectioncode)ZDB-2-SEB",
                "(collectioncode)ZDB-2-CWD",
                "(collectioncode)ZDB-2-SXPC"
            ],
            "issued": "2023",
            "language": "http://id.loc.gov/vocabulary/iso639-1/en",
            "license": "commercial licence",
            "medium": "rda:termList/RDACarrierType/1018",
            "isLike": "doi:10.1007/978-1-4842-8572-5",
            "P60163": "Berkeley, CA"
        }
    ],
    "@id": "urn:x-arq:DefaultGraphNode",
    "@context": {
        "subject": "http://purl.org/dc/elements/1.1/subject",
        "isPartOf": "http://purl.org/dc/terms/isPartOf",
        "language": {
            "@id": "http://purl.org/dc/terms/language",
            "@type": "@id"
        },
        "abstract": "http://purl.org/dc/terms/abstract",
        "license": "http://purl.org/dc/terms/license",
        "identifier": "http://purl.org/dc/elements/1.1/identifier",
        "creator": "http://purl.org/dc/elements/1.1/creator",
        "issued": "http://purl.org/dc/terms/issued",
        "P1053": "http://iflastandards.info/ns/isbd/elements/P1053",
        "medium": {
            "@id": "http://purl.org/dc/terms/medium",
            "@type": "@id"
        },
        "contributor": "http://purl.org/dc/terms/contributor",
        "title": "http://purl.org/dc/elements/1.1/title",
        "description": "http://purl.org/dc/elements/1.1/description",
        "isLike": {
            "@id": "http://umbel.org/umbel#isLike",
            "@type": "@id"
        },
        "publisher": "http://purl.org/dc/elements/1.1/publisher",
        "P60163": "http://www.rdaregistry.info/Elements/u/#P60163",
        "umbel": "http://umbel.org/umbel#",
        "rdau": "http://www.rdaregistry.info/Elements/u/#",
        "owl": "http://www.w3.org/2002/07/owl#",
        "dcterms": "http://purl.org/dc/terms/",
        "bibo": "http://purl.org/ontology/bibo/",
        "rdam": "http://www.rdaregistry.info/Elements/m/#",
        "gnd": "http://d-nb.info/gnd/",
        "isbd": "http://iflastandards.info/ns/isbd/elements/",
        "rda": "http://rdvocab.info/",
        "doi": "https://doi.org/"
    }
}